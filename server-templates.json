{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "Authelia",
      "name": "authelia",
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/authelia.png",
      "image": "authelia/authelia:latest",
      "note": "Requires a configuration.yml file in order to work. Documentation is Available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
      "categories": [
        "Security"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "9091:9091/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/authelia/",
          "bind": "/portainer/Files/AppData/Config/Authelia"
        }
      ],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "Duplicati",
      "name": "duplicati",
      "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duplicati-icon.png",
      "image": "linuxserver/duplicati:latest",
      "categories": [
        "Backup"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "8200:8200/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Duplicati"
        },
        {
          "container": "/tmp"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
      {
      "type": 1,
      "title": "Nginx Proxy Manager",
      "name": "nginx-proxy-manager",
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
      "note": "This template uses the jc21 image (from the original author)",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/proxy_mgr.png",
      "image": "jc21/nginx-proxy-manager:latest",
      "categories": [
        "Proxy"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "80:8080/tcp",
        "81:8181/tcp",
        "443:4443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Nginx-Proxy"
        }
      ]
    },
    {
      "type": 1,
      "title": "Watchtower",
      "name": "watchtower",
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/watchtower.png",
      "image": "containrrr/watchtower:latest",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "categories": [
        "Other"
      ],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
  ]
}
